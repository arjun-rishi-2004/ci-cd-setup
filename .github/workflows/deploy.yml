name: Deploy Spring Boot Apps to EC2 without Docker Registry

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build JAR
        run: ./gradlew clean bootJar -x test

      - name: Build EMSP Docker Image
        run: |
          docker build -t emsp:latest \
          --build-arg SCHEMA=emsp \
          --build-arg SERVER_PORT=9443 \
          --build-arg SAAS_URL=https://localhost:9443/hooks \
          --build-arg PUBLIC_URL=https://localhost:9443 .

      - name: Build CPO Docker Image
        run: |
          docker build -t cpo:latest \
          --build-arg SCHEMA=cpo \
          --build-arg SERVER_PORT=8443 \
          --build-arg SAAS_URL=https://localhost:8443/hooks \
          --build-arg PUBLIC_URL=https://localhost:8443 .

      - name: Save Docker Images
        run: |
          docker save emsp:latest -o emsp.tar
          docker save cpo:latest -o cpo.tar
      - name: Set permissions for Docker images
        run: chmod 644 emsp.tar cpo.tar

      - name: Transfer Docker Images to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          source: "emsp.tar,cpo.tar"
          target: "~/"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: SSH into EC2 and Deploy Containers
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            # Load the Docker images
            docker load -i ~/emsp.tar
            docker load -i ~/cpo.tar
            
            # Remove old containers if they exist
            docker stop emsp || true && docker rm emsp || true
            docker stop cpo || true && docker rm cpo || true

            # Run EMSP container
            docker run -d --name emsp -p 9443:9443 --restart always emsp:latest

            # Run CPO container
            docker run -d --name cpo -p 8443:8443 --restart always cpo:latest
